import{useIntersectionObserver as e}from"react-visible-observer";export{useIntersectionObserver}from"react-visible-observer";import t,{useState as r,useRef as l,useEffect as n}from"react";const a=e=>{let{item:a,isVisible:s,refreshOnVisible:i,fetchItemData:o,children:m,itemLoader:c}=e;const[d,u]=r(null),h=l(!1);return n((()=>{o&&s&&(i||!h.current)&&o(a).then((e=>{u(e||null),h.current=!0}))}),[s,i,a,o]),t.createElement(t.Fragment,null,s?m(a,d):c)},s=n=>{let{listData:s=[],renderItem:i=(e=>t.createElement(t.Fragment,null,e||"Loading data...")),refreshOnVisible:o=!1,fetchItemData:m,containerHeight:c="400px",itemStyle:d,listClassName:u=null,itemClassName:h=null,observerOptions:f={root:null,rootMargin:"0px",threshold:.1},onLoadMore:b,hasMore:g=!1,loader:p="",endMessage:v="",itemLoader:E=""}=n;const[x,y]=r(new Set),I=l([]),L=l(null);e(I,((e,t)=>{const r=parseInt(t.target.id,10);y(e?e=>new Set(e).add(r):e=>{const t=new Set(e);return t.delete(r),t})}),null,f);return e(L,((e,t)=>{e&&g&&b&&b()}),null,{root:null,rootMargin:"0px",threshold:1}),t.createElement("div",{className:u,style:{height:c,overflowY:"auto"}},s.length?s.map(((e,r)=>t.createElement("div",{className:h,style:d,ref:e=>I.current[r]=e,key:r,id:r},t.createElement(a,{item:e,isVisible:x.has(r),refreshOnVisible:o,fetchItemData:m,itemStyle:d,itemLoader:E},i)))):null,g?t.createElement("div",{ref:L,style:{height:"1px"}},p):t.createElement("div",null,v))};export{s as default};
